{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "httpd-blue-green-deploymentconfig",
    "annotations": {
      "description": "Template for deploying an Apache HTTP Server (httpd) application",
      "tags": "quickstart,httpd",
      "iconClass": "icon-apache",
      "openshift.io/long-description": "This template defines deploymentconfig resources needed to develop a static application served by Apache HTTP Server (httpd)",
      "openshift.io/provider-display-name": "Red Hat, Inc.",
      "template.openshift.io/bindable": "false"
    }
  },
  "message": "The following service(s) have been created in your project: ${APPLICATION_NAME}.\n",
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "replicas": "${NUM_REPLICAS}",
        "selector": {
          "name": "${APPLICATION_NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "microservice": "${MICROSERVICE_NAME}",
          "application": "${APPLICATION_NAME}",
          "cmdb": "${APPLICATION_ID}",
          "version": "${VERSION_NUMBER}",
          "gitCommit": "${GIT_COMMIT}"
        },
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
              "updatePeriodSeconds": 1,
              "intervalSeconds": 1,
              "timeoutSeconds": 600,
              "maxUnavailable": "50%",
              "maxSurge": "50%"
          }
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APPLICATION_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${APPLICATION_NAME}-imagestream:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${APPLICATION_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${APPLICATION_NAME}",
            "labels": {
              "name": "${APPLICATION_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${APPLICATION_NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                    "timeoutSeconds": 3,
                    "initialDelaySeconds": 30,
                    "httpGet": {
                        "path": "/",
                        "port": 8080
                    }
                },
                "resources": {
                    "requests": {
                        "cpu" : "${DEPLOY_CPU_REQUEST}",
                        "memory": "${DEPLOY_MEM_REQUEST}"
                    },
                    "limits": {
                        "cpu" : "${DEPLOY_CPU_LIMIT}",
                        "memory": "${DEPLOY_MEM_LIMIT}"
                    }
               },
                "env": [
                ]
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "APPLICATION_NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "my-application"
    },
    {
      "name": "MICROSERVICE_NAME",
      "description": "The name for the application.",
      "value": "my-microservice",
      "required": true
    },
    {
      "name": "APPLICATION_ID",
      "description": "ID of the application the microservice belongs to",
      "value": "my-application-id",
      "required": true
    },
    {
      "name": "NAMESPACE",
      "displayName": "Namespace",
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "required": true,
      "value": "openshift"
    },
    {
      "name": "DEPLOY_MEM_LIMIT",
      "description": "Maximum amount of memory the container can use.",
      "required": true,
      "value": "1536Mi"
    },
    {
      "name": "DEPLOY_MEM_REQUEST",
      "description": "The requested memory for a build",
      "value": "512Mi",
      "required": true
    },
    {
      "name": "DEPLOY_CPU_LIMIT",
      "description": "The limit of CPU to allow for a build",
      "value":"1000m",
      "required":true
    },
    {
      "name": "DEPLOY_CPU_REQUEST",
      "description": "The requested CPU for a build.",
      "value": "500m",
      "required": true
    },
    {
      "name": "GIT_REPO_URL",
      "displayName": "Git Repository URL",
      "description": "The URL of the repository with your application source code.",
      "required": true,
      "value": "https://github.com/Freddy-Montero/blue-green-example.git"
    },
    {
      "name": "GIT_REPO_BRANCH",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    },
    {
      "name": "GIT_CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository."
    },
    {
      "name": "GIT_COMMIT",
      "description": "Git commit of image.",
      "value": "HEAD",
      "required":true
    },
    {
      "name": "VERSION_NUMBER",
      "description": "Version of deployment.",
      "value": "1.0",
      "required":true
    },
    {
      "name": "NUM_REPLICAS",
      "value": "1",
      "description": "Initial number of replicas to deploy",
      "required": true
    },
    {
      "name": "GITHUB_SECRET",
      "displayName": "GitHub Webhook Secret",
      "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "GENERIC_WEBHOOK_SECRET",
      "displayName": "Generic Webhook Secret",
      "description": "A secret string used to configure the Generic webhook.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    }
  ]
}
